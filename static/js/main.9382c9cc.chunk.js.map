{"version":3,"sources":["components/Profile/Profile.styled.jsx","components/Profile/Profile.jsx","App.styled.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["ProfileCont","styled","div","Description","AvatarImg","img","UserName","p","UserTag","UserLocation","StatsList","ul","StatsItem","li","StatsLabel","span","StatsQuantity","Profile","props","src","avatar","alt","username","tag","location","stastFolowers","statsViews","statsLikes","Container","StatisticsSec","section","Title","h2","StatisticsList","StatisticsItem","Label","Percentage","getRandomColor","letters","split","color","i","Math","floor","random","Statistics","title","data","map","s","style","backgroundColor","label","percentage","id","App","user","stats","followers","views","likes","statistics","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAEaA,EAAcC,IAAOC,IAAV,qRAaXC,EAAcF,IAAOC,IAAV,yEAKXE,EAAYH,IAAOI,IAAV,4MAUTC,EAAWL,IAAOM,EAAV,4EAKRC,EAAUP,IAAOM,EAAV,iGAMPE,EAAeR,IAAOM,EAAV,uEAKZG,EAAYT,IAAOU,GAAV,wKASTC,EAAYX,IAAOY,GAAV,qPAYTC,EAAab,IAAOc,KAAV,0EAIVC,EAAgBf,IAAOc,KAAV,iD,OC7BXE,I,cAAAA,EAtCf,SAAiBC,GACf,OACE,eAAClB,EAAD,WACE,eAACG,EAAD,WACE,cAACC,EAAD,CAAWe,IAAKD,EAAME,OAAQC,IAAI,gBAClC,cAACf,EAAD,UAAWY,EAAMI,WACjB,eAACd,EAAD,eAAWU,EAAMK,OACjB,cAACd,EAAD,UAAeS,EAAMM,cAGvB,eAACd,EAAD,WACE,eAACE,EAAD,WACE,cAACE,EAAD,wBACA,cAACE,EAAD,UAAgBE,EAAMO,mBAExB,eAACb,EAAD,WACE,cAACE,EAAD,oBACA,cAACE,EAAD,UAAgBE,EAAMQ,gBAExB,eAACd,EAAD,WACE,cAACE,EAAD,oBACA,cAACE,EAAD,UAAgBE,EAAMS,uBCvBnBC,EAAY3B,IAAOC,IAAV,6ECCT2B,G,MAAgB5B,IAAO6B,QAAV,gQAYbC,EAAQ9B,IAAO+B,GAAV,2EAKLC,EAAiBhC,IAAOU,GAAV,kEAKduB,EAAiBjC,IAAOY,GAAV,sTAcdsB,EAAQlC,IAAOc,KAAV,2EAKLqB,EAAanC,IAAOc,KAAV,kDCzCvB,SAASsB,IAGP,IAFA,IAAIC,EAAU,mBAAmBC,MAAM,IACnCC,EAAQ,IACJC,EAAI,EAAGA,EAAI,EAAGA,IAClBD,GAASF,EAAQI,KAAKC,MAAsB,GAAhBD,KAAKE,WAErC,OAAOJ,EA0BMK,MAvBf,YAAsC,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KAC3B,OACE,eAAClB,EAAD,WACGiB,GAAS,cAACf,EAAD,UAAQe,IAElB,cAACb,EAAD,UACGc,EAAKC,KAAI,SAAAC,GAAC,OACP,eAACf,EAAD,CAA2BgB,MAAO,CAACC,gBAAiBd,KAApD,UACA,cAACF,EAAD,UAAQc,EAAEG,QACV,cAAChB,EAAD,UAAaa,EAAEI,eAFMJ,EAAEK,aCMpBC,MAjBf,WACE,OACE,eAAC3B,EAAD,WACE,cAAC,EAAD,CACER,OAAQoC,EAAKpC,OACbE,SAAUkC,EAAKlC,SACfC,IAAKiC,EAAKjC,IACVC,SAAUgC,EAAKhC,SACfC,cAAe+B,EAAKC,MAAMC,UAC1BhC,WAAY8B,EAAKC,MAAME,MACvBhC,WAAY6B,EAAKC,MAAMG,QAEzB,cAAC,EAAD,CAAYd,MAAM,eAAeC,KAAMc,QCf7CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9382c9cc.chunk.js","sourcesContent":["import styled from '@emotion/styled'\r\n\r\nexport const ProfileCont = styled.div`\r\nmargin-right: auto;\r\nmargin-left: auto;\r\n    display: flex;\r\n    margin-bottom: 50px;\r\n    width: 300px;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background-color: white;\r\n    border: 1px solid #8b8b8b;\r\n    border-radius: 10px;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n    padding: 10px;\r\n    text-align: center;\r\n`;\r\n\r\nexport const AvatarImg = styled.img` \r\n    display: block;\r\n    width: 250px;\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n    border: 1px solid #8b8b8b;\r\n    border-radius: 50%;\r\n    background-color: #dfdfdf;\r\n`;\r\n\r\nexport const UserName = styled.p`\r\n    font-size: 25px;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nexport const UserTag = styled.p`\r\n    font-size: 18px;\r\n    margin-bottom: 15px;\r\n    color: #458181;\r\n`;\r\n\r\nexport const UserLocation = styled.p`\r\n    font-size: 20px;\r\n    color: #458181;\r\n`;\r\n\r\nexport const StatsList = styled.ul`\r\n    display: flex;\r\n    width: 100%;\r\n    padding-inline-start: 0px;\r\n    margin: 0;\r\n    margin-block-start: 0;\r\n    margin-block-end: 0;\r\n`;\r\n\r\nexport const StatsItem = styled.li`\r\n    font-size: 18px;\r\n    padding: 5px;\r\n    flex-grow: 1;\r\n    text-align: center;\r\n    border-top: 1px solid #8b8b8b;\r\n    color: #363636;\r\n    &:not(:last-child) {\r\n        border-right: 1px solid #8b8b8b;\r\n    }\r\n`;\r\n\r\nexport const StatsLabel = styled.span`\r\n    display: block;\r\n    margin-bottom: 5px;\r\n`;\r\nexport const StatsQuantity = styled.span`\r\n    display: block;\r\n`;","import PropTypes from 'prop-types';\nimport { ProfileCont, Description, AvatarImg, UserName, UserTag, UserLocation, StatsList, StatsItem, StatsLabel, StatsQuantity } from './Profile.styled'\n\n\nfunction Profile(props) {\n  return (\n    <ProfileCont>\n      <Description>\n        <AvatarImg src={props.avatar} alt=\"User avatar\" />\n        <UserName>{props.username}</UserName>\n        <UserTag>@{props.tag}</UserTag>\n        <UserLocation>{props.location}</UserLocation>\n      </Description>\n\n      <StatsList>\n        <StatsItem>\n          <StatsLabel>Followers</StatsLabel>\n          <StatsQuantity>{props.stastFolowers}</StatsQuantity>\n        </StatsItem>\n        <StatsItem>\n          <StatsLabel>Views</StatsLabel>\n          <StatsQuantity>{props.statsViews}</StatsQuantity>\n        </StatsItem>\n        <StatsItem>\n          <StatsLabel>Likes</StatsLabel>\n          <StatsQuantity>{props.statsLikes}</StatsQuantity>\n        </StatsItem>\n      </StatsList>\n    </ProfileCont>\n  );\n}\n\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stastFolowers: PropTypes.number.isRequired,\n  statsViews: PropTypes.number.isRequired,\n  statsLikes: PropTypes.number.isRequired,\n};\n\nexport default Profile;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n    background-color: aqua;\n    padding: 30px;\n`;","import styled from '@emotion/styled';\r\n\r\n\r\nexport const StatisticsSec = styled.section`\r\n    width: fit-content;\r\n    border: 1px solid #8b8b8b;\r\n    border-radius: 10px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-bottom: 50px;\r\n    padding: 0;\r\n    background-color: #fff;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n    text-align: center;\r\n    font-size: 30px;\r\n`;\r\n\r\nexport const StatisticsList = styled.ul`\r\n    display: flex;\r\n    width: 100%;\r\n`;\r\n\r\nexport const StatisticsItem = styled.li`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 5px 15px;\r\n    flex-grow: 1;\r\n    border-top: 1px solid #8b8b8b;\r\n    overflow: hidden;\r\n    &:not(:last-child) {\r\n        border-right: 1px solid #8b8b8b;\r\n    }\r\n`;\r\n\r\nexport const Label = styled.span`\r\n    font-size: 20px;\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nexport const Percentage = styled.span`\r\n    font-size: 20px;\r\n`;","import PropTypes from 'prop-types';\r\nimport { StatisticsSec, Title, StatisticsList, StatisticsItem, Label, Percentage } from './Statistics.styled';\r\n\r\nfunction getRandomColor() {\r\n  var letters = '0123456789ABCDEF'.split(''),\r\n      color = '#';\r\n  for(var i = 0; i < 6; i++ ) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\nfunction Statistics({ title, data }) {\r\n  return (\r\n    <StatisticsSec>\r\n      {title && <Title>{title}</Title>}\r\n\r\n      <StatisticsList>\r\n        {data.map(s => (\r\n            <StatisticsItem key={s.id} style={{backgroundColor: getRandomColor()}}>\r\n            <Label>{s.label}</Label>\r\n            <Percentage>{s.percentage}</Percentage>\r\n          </StatisticsItem>\r\n        ))}\r\n      </StatisticsList>\r\n    </StatisticsSec>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  label: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics;\r\n","// App.js\nimport user from './data/user.json';\nimport statistics from './data/statistics.json';\nimport Profile from './components/Profile/Profile';\nimport { Container } from './App.styled';\nimport 'normalize.css';\nimport Statistics from './components/Statistics/Statistics';\n\nfunction App() {\n  return (\n    <Container>\n      <Profile\n        avatar={user.avatar}\n        username={user.username}\n        tag={user.tag}\n        location={user.location}\n        stastFolowers={user.stats.followers}\n        statsViews={user.stats.views}\n        statsLikes={user.stats.likes}\n      />\n      <Statistics title=\"Upload stats\" data={statistics}/>\n    </Container>\n  );\n}\n\nexport default App;\n","// index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}